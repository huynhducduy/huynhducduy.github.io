{"version":3,"sources":["utils/auth/constants.js","utils/auth/isAuthenticated.js","utils/local-storage/setItem.js","utils/local-storage/removeItem.js","utils/local-storage/clear.js","utils/local-storage/getItem.js","utils/auth/getAccessTokenExpiresAt.js","utils/local-storage/generateKey.js","utils/auth/tokenIsExpired.js","utils/auth/setAccessToken.js","utils/auth/setRefreshToken.js","utils/auth/setAccessTokenExpiresAt.js","utils/router/loadableComponent.js","utils/router/redirectComponent.js","routes.js","config.js","utils/auth/clearAuth.js","utils/router/getRoute.js","assets/avatar.jpg","utils/auth/getAccessToken.js","utils/auth/getRefreshToken.js","utils/auth/tokenIsAlmostExpired.js","utils/auth/tokenExpiresIn.js","utils/router/conditionalRouter.js","utils/router/privateRouter.js","utils/router/publicRouter.js","utils/router/protectedRouter.js","app/info.js","app.js","serviceWorker.js","index.js"],"names":["LOCAL_STORAGE_KEY","ACCESS_TOKEN","ACCESS_TOKEN_EXPIRES_AT","REFRESH_TOKEN","PRODUCT","LocalStorage","constants","tokenIsExpired","key","value","localStorage","setItem","generateKey","removeItem","defaultValue","getItem","access_token_expire_at","parseInt","Number","isInteger","config","name","compareAsc","toDate","getAccessTokenExpiresAt","Date","token","isEmpty","expires_at","Loading","pastDelay","isLoading","timedOut","error","retry","style","textAlign","height","width","maxHeight","position","opacity","Spinner","animation","transform","top","left","type","onClick","defaultProps","to","loader","Loadable","loading","timeout","delay","path","component","exact","loadableComponent","access_level","process","api","setAccessToken","setRefreshToken","setAccessTokenExpiresAt","routes","find","e","module","exports","differenceInHours","Component","condition","redirectTo","reason","rest","render","props","pathname","getRoute","state","from","location","isAuthenticated","Info","Col","md","lg","xl","className","Image","roundedCircle","src","avatar","alt","target","rel","href","mdiFile","size","mdiPost","mdiLinkedin","mdiGithub","mdiFacebook","App","Container","fluid","Row","map","route","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.2e25ada6.chunk.js","sourcesContent":["export default {\n    LOCAL_STORAGE_KEY: {\n        ACCESS_TOKEN           : \"access_token\",\n        ACCESS_TOKEN_EXPIRES_AT: \"access_token_expires_at\",\n        REFRESH_TOKEN          : \"refress_token\",\n        PRODUCT                : \"product\",\n    },\n};\n","import * as LocalStorage from 'utils/local-storage';\nimport constants from './constants';\nimport tokenIsExpired from './tokenIsExpired';\n\nexport default function () {\n  return (\n    !!LocalStorage.getItem(constants.LOCAL_STORAGE_KEY.ACCESS_TOKEN) &&\n    !tokenIsExpired()\n  );\n}\n","import generateKey from \"./generateKey\";\n\nexport default function(key, value) {\n    if (typeof localStorage !== \"undefined\") {\n        localStorage.setItem(generateKey(key), value);\n    }\n}\n","import generateKey from \"./generateKey\";\n\nexport default function(key) {\n    if (typeof localStorage !== \"undefined\") {\n        localStorage.removeItem(generateKey(key));\n    }\n}\n","export default function() {\n    if (typeof localStorage !== \"undefined\") {\n        localStorage.clear();\n    }\n}\n","import generateKey from \"./generateKey\";\n\nexport default function(key, defaultValue = null) {\n    if (typeof localStorage !== \"undefined\") {\n        return localStorage.getItem(generateKey(key)) || defaultValue;\n    }\n}\n","import * as LocalStorage from 'utils/local-storage';\nimport constants from './constants';\n\n/**\n * @return int\n */\nexport default function () {\n  const access_token_expire_at = parseInt(\n    LocalStorage.getItem(constants.LOCAL_STORAGE_KEY.ACCESS_TOKEN_EXPIRES_AT, 0)\n  );\n\n  return Number.isInteger(access_token_expire_at) && access_token_expire_at >= 0\n    ? access_token_expire_at\n    : 0;\n}\n","import config from \"../../config\";\n\nexport default function(key) {\n    return `${config.name}_${key}`; // Local storage pattern: prefix_key\n}\n","import { toDate, compareAsc } from 'date-fns';\nimport getAccessTokenExpiresAt from './getAccessTokenExpiresAt';\n\nexport default function () {\n  // return expireAt < now\n  return compareAsc(toDate(getAccessTokenExpiresAt() * 1000), new Date()) !== 1;\n}\n","import { isEmpty } from 'ramda';\nimport constants from './constants';\n\nimport setItem from 'utils/local-storage/setItem';\nimport removeItem from 'utils/local-storage/removeItem';\n\nexport default function (token = '') {\n  if (isEmpty(token)) removeItem(constants.LOCAL_STORAGE_KEY.ACCESS_TOKEN);\n  else setItem(constants.LOCAL_STORAGE_KEY.ACCESS_TOKEN, token);\n}\n","import { isEmpty } from 'ramda';\nimport constants from './constants';\n\nimport setItem from 'utils/local-storage/setItem';\nimport removeItem from 'utils/local-storage/removeItem';\n\nexport default function (token = '') {\n  if (isEmpty(token)) removeItem(constants.LOCAL_STORAGE_KEY.REFRESH_TOKEN);\n  else setItem(constants.LOCAL_STORAGE_KEY.REFRESH_TOKEN, token);\n}\n","import { isEmpty } from 'ramda';\nimport constants from './constants';\n\nimport setItem from 'utils/local-storage/setItem';\nimport removeItem from 'utils/local-storage/removeItem';\n\nexport default function (expires_at = '') {\n  if (isEmpty(expires_at))\n    removeItem(constants.LOCAL_STORAGE_KEY.ACCESS_TOKEN_EXPIRES_AT);\n  else {\n    setItem(constants.LOCAL_STORAGE_KEY.ACCESS_TOKEN_EXPIRES_AT, expires_at);\n  }\n}\n","import React from 'react';\nimport Loadable from 'react-loadable';\nimport PropTypes from 'prop-types';\nimport { Spinner } from 'react-bootstrap';\n\nLoading.propTypes = {\n  pastDelay: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  timedOut: PropTypes.bool.isRequired,\n  error: PropTypes.bool,\n  retry: PropTypes.func.isRequired,\n};\n\nLoading.defaultProps = {\n  error: false,\n};\n\nfunction Loading({ pastDelay, isLoading, timedOut, error, retry }) {\n  if (isLoading) {\n    if (timedOut) {\n      return <div>Connection timed out!</div>;\n    }\n    if (pastDelay) {\n      return (\n        <div\n          style={{\n            textAlign: 'center',\n            height: '100%',\n            width: '100%',\n            maxHeight: '100vh',\n            position: 'absolute',\n            opacity: '1',\n          }}\n        >\n          <Spinner\n            animation=\"border\"\n            style={{\n              transform: 'translateY(-50%) translateX(-50%)',\n              top: '50%',\n              left: '50%',\n              position: 'absolute',\n            }}\n          />\n        </div>\n      );\n    }\n    return null;\n  }\n  if (error) {\n    return (\n      <div>\n        <button type=\"button\" onClick={retry}>\n          Retry\n        </button>\n      </div>\n    );\n  }\n  return null;\n}\n\nexport default function (loader) {\n  return Loadable({\n    loader: () => loader,\n    loading: Loading,\n    timeout: 10000, // 10 seconds\n    delay: 30000, // avoid flash\n  });\n}\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default function (to) {\n  return () => <Redirect to={to} />;\n}\n","import loadableComponent from './utils/router/loadableComponent';\nimport redirectComponent from './utils/router/redirectComponent';\n\nconst errorPages = [];\n\nexport default [\n  {\n    name: 'home',\n    path: '/',\n    component: redirectComponent('/blog'),\n    exact: true,\n  },\n  {\n    name: 'resume',\n    path: '/resume',\n    component: loadableComponent(\n      import('./app/resume' /* webpackChunkName: \"resume\" */)\n    ),\n    exact: true,\n  },\n  {\n    name: 'blog-list',\n    path: '/blog',\n    component: loadableComponent(\n      import('./app/blog/list' /* webpackChunkName: \"blog-list\" */)\n    ),\n    exact: true,\n  },\n  {\n    name: 'blog-write',\n    path: '/blog/write',\n    component: loadableComponent(\n      import('./app/blog/write' /* webpackChunkName: \"blog-write\" */)\n    ),\n    exact: true,\n    access_level: 'private',\n  },\n  {\n    name: 'blog-read',\n    path: '/blog/:id',\n    component: loadableComponent(\n      import('./app/blog/read' /* webpackChunkName: \"blog-list\" */)\n    ),\n    exact: true,\n  },\n  {\n    name: 'blog-edit',\n    path: '/blog/:id/edit',\n    component: loadableComponent(\n      import('./app/blog/edit' /* webpackChunkName: \"blog-edit\" */)\n    ),\n    exact: true,\n    access_level: 'protected',\n  },\n  {\n    name: 'auth-login',\n    path: '/auth/login',\n    component: loadableComponent(\n      import('./app/auth/login' /* webpackChunkName: \"auth-login\" */)\n    ),\n    exact: true,\n    access_level: 'public',\n  },\n  {\n    name: 'auth-register',\n    path: '/auth/register',\n    component: loadableComponent(\n      import('./app/auth/register' /* webpackChunkName: \"auth-register\" */)\n    ),\n    exact: true,\n    access_level: 'public',\n  },\n  {\n    name: 'auth-profile',\n    path: '/auth/profile',\n    component: loadableComponent(\n      import('./app/auth/profile' /* webpackChunkName: \"auth-profile\" */)\n    ),\n    exact: true,\n    access_level: 'private',\n  },\n  {\n    name: 'auth-changePass',\n    path: '/auth/change-password',\n    component: loadableComponent(\n      import('./app/auth/changePass' /* webpackChunkName: \"auth-changePass\" */)\n    ),\n    exact: true,\n    access_level: 'private',\n  },\n  {\n    name: 'tag-list',\n    path: '/tag',\n    component: loadableComponent(\n      import('./app/tag/list' /* webpackChunkName: \"tag-list\" */)\n    ),\n    exact: true,\n  },\n  {\n    name: 'tag-read',\n    path: '/tag/:tag',\n    component: loadableComponent(\n      import('./app/tag/read' /* webpackChunkName: \"tag-read\" */)\n    ),\n    exact: true,\n  },\n  {\n    name: 'user-list',\n    path: '/user',\n    component: loadableComponent(\n      import('./app/user/list' /* webpackChunkName: \"user-list\" */)\n    ),\n    exact: true,\n  },\n  {\n    name: 'user-read',\n    path: '/user/:id',\n    component: loadableComponent(\n      import('./app/user/read' /* webpackChunkName: \"user-read\" */)\n    ),\n    exact: true,\n  },\n  ...errorPages,\n];\n","export default {\n  name: process.env.REACT_APP_NAME,\n  api: process.env.REACT_APP_API,\n};\n","import setAccessToken from './setAccessToken';\nimport setRefreshToken from './setRefreshToken';\nimport setAccessTokenExpiresAt from './setAccessTokenExpiresAt';\nexport default function () {\n  setAccessToken();\n  setRefreshToken();\n  setAccessTokenExpiresAt();\n}\n","import routes from '../../routes';\n\nexport default function (name) {\n  return routes.find(e => e.name === name);\n}\n","module.exports = __webpack_public_path__ + \"static/media/avatar.552163ba.jpg\";","import * as LocalStorage from 'utils/local-storage';\nimport constants from './constants';\n\nexport default function () {\n  return LocalStorage.getItem(constants.LOCAL_STORAGE_KEY.ACCESS_TOKEN);\n}\n","import * as LocalStorage from 'utils/local-storage';\nimport constants from './constants';\n\nexport default function () {\n  return LocalStorage.getItem(constants.LOCAL_STORAGE_KEY.REFRESH_TOKEN);\n}\n","import tokenExpiresIn from './tokenExpiresIn';\n\nexport default function () {\n  return tokenExpiresIn() <= 1;\n}\n","import { toDate, differenceInHours } from 'date-fns';\nimport getAccessTokenExpiresAt from './getAccessTokenExpiresAt';\n\nexport default function () {\n  return differenceInHours(\n    toDate(getAccessTokenExpiresAt() * 1000),\n    new Date()\n  );\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport getRoute from './getRoute';\n\nexport default function ({\n  component: Component,\n  condition,\n  redirectTo,\n  reason,\n  ...rest // pass directly to Route https://reacttraining.com/react-router/web/api/Route\n}) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        condition === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: getRoute(redirectTo).path,\n              state: { from: props.location, reason },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n","import React from 'react';\nimport isAuthenticated from 'utils/auth/isAuthenticated';\nimport ConditionalRouter from './conditionalRouter';\n\nexport default function ({ component, ...rest }) {\n  const config = {\n    component,\n    condition: isAuthenticated(),\n    redirectTo: 'auth-login',\n    reason: 'You dont have permission to access to this route',\n    ...rest,\n  };\n\n  return <ConditionalRouter {...config} />;\n}\n","import React from 'react';\nimport isAuthenticated from 'utils/auth/isAuthenticated';\nimport ConditionalRouter from './conditionalRouter';\n\nexport default function ({ component, ...rest }) {\n  const config = {\n    component,\n    condition: !isAuthenticated(),\n    redirectTo: 'home',\n    reason: '',\n    ...rest,\n  };\n\n  return <ConditionalRouter {...config} />;\n}\n","import React from 'react';\nimport isAuthenticated from 'utils/auth/isAuthenticated';\nimport ConditionalRouter from './conditionalRouter';\n\nexport default function ({ component, ...rest }) {\n  const config = {\n    component,\n    condition: isAuthenticated(),\n    redirectTo: 'auth-login',\n    reason: '',\n    ...rest,\n  };\n\n  return <ConditionalRouter {...config} />;\n}\n","import React from 'react';\nimport avatar from '../assets/avatar.jpg';\nimport Icon from '@mdi/react';\nimport { Col, Image, Button } from 'react-bootstrap';\nimport { mdiFile, mdiPost, mdiGithub, mdiLinkedin, mdiFacebook } from '@mdi/js';\nimport { isAuthenticated, clearAuth } from 'utils/auth';\n\nexport default function Info() {\n  return (\n    <Col md={12} lg={4} xl={5} className=\"left-col\">\n      <div>\n        <Image\n          roundedCircle\n          src={avatar}\n          alt=\"avatar\"\n          width={250}\n          className=\"avatar\"\n        />\n        <h1 className=\"name\">Huynh Duc Duy</h1>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://huynhducduy.me\"\n        >\n          <div className=\"website\">huynhducduy.me</div>\n        </a>\n        <h2 className=\"title\">Web Developer</h2>\n        <div className=\"icons\">\n          <a rel=\"noopener noreferrer\" href=\"/#/resume\" className=\"black\">\n            <div className=\"icon-block\">\n              <div>\n                <Icon path={mdiFile} size={2} />\n              </div>\n              <span>Resume</span>\n            </div>\n          </a>\n          <a rel=\"noopener noreferrer\" href=\"/#/blog\" className=\"black\">\n            <div className=\"icon-block\">\n              <div>\n                <Icon path={mdiPost} size={2} />\n              </div>\n              <span>Blog</span>\n            </div>\n          </a>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.linkedin.com/in/huynhducduy/\"\n            className=\"black\"\n          >\n            <div className=\"icon-block\">\n              <div>\n                <Icon path={mdiLinkedin} size={2} />\n              </div>\n              <span>LinkedIn</span>\n            </div>\n          </a>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/huynhducduy\"\n            className=\"black\"\n          >\n            <div className=\"icon-block\">\n              <div>\n                <Icon path={mdiGithub} size={2} />\n              </div>\n              <span>Github</span>\n            </div>\n          </a>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://fb.com/huynhducduy\"\n            className=\"black\"\n          >\n            <div className=\"icon-block\">\n              <div>\n                <Icon path={mdiFacebook} size={2} />\n              </div>\n              <span>Facebook</span>\n            </div>\n          </a>\n        </div>\n      </div>\n    </Col>\n  );\n}\n","import React from 'react';\nimport './app.scss';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport PrivateRouter from 'utils/router/privateRouter';\nimport PublicRouter from 'utils/router/publicRouter';\nimport ProtectedRouter from 'utils/router/protectedRouter';\n\nimport routes from './routes';\n\nimport Info from './app/info';\n\nfunction App() {\n  return (\n    <Container fluid>\n      <Row>\n        <Info />\n        <Col md={12} lg={8} xl={7} className=\"right-col\">\n          <Router>\n            <Switch>\n              {routes.map(route => {\n                if (route.access_level === 'private') {\n                  return <PrivateRouter key={route.path} {...route} />;\n                }\n\n                if (route.access_level === 'public') {\n                  return <PublicRouter key={route.path} {...route} />;\n                }\n\n                if (route.access_level === 'protected') {\n                  return <ProtectedRouter key={route.path} {...route} />;\n                }\n\n                return <Route key={route.path} {...route} />;\n              })}\n            </Switch>\n          </Router>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nfunction render() {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nrender();\n\n// Enable hot-module-replacement\nif (module.hot) {\n  module.hot.accept('./app', () => {\n    render();\n  });\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}