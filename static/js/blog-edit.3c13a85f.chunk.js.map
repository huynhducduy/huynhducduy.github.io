{"version":3,"sources":["app/blog/edit.js","utils/api/caller.js"],"names":["BlogEdit","match","history","useHistory","useState","selectedTab","setSelectedTab","title","description","slug","image","content","tags","state","setState","setContentValue","useCallback","value","load","request","method","to","config","api","params","id","then","res","data","handleChange","e","target","name","edit","preventDefault","push","catch","err","alert","response","message","useEffect","md","style","marginBottom","onSubmit","Group","controlId","Control","type","placeholder","onChange","as","onTabChange","generateMarkdownPreview","markdown","Promise","resolve","source","childProps","writeButton","tabIndex","variant","onClick","timeout","defaultHeaders","headers","access_token","authHelpers","Authorization","a","custom","axios","url"],"mappings":"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","file":"static/js/blog-edit.3c13a85f.chunk.js","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { request } from 'utils/api/caller';\nimport config from 'config';\nimport ReactMde from 'react-mde';\nimport ReactMarkdown from 'react-markdown';\nimport 'react-mde/lib/styles/css/react-mde-all.css';\n\nconst BlogEdit = ({ match }) => {\n  const history = useHistory();\n\n  const [selectedTab, setSelectedTab] = useState('write');\n  const [state, setState] = useState({\n    title: '',\n    description: '',\n    slug: '',\n    image: '',\n    content: '',\n    tags: '',\n  });\n\n  const setContentValue = useCallback(\n    function (value) {\n      setState({ ...state, content: value });\n    },\n    [state]\n  );\n\n  const load = useCallback(\n    function () {\n      request({\n        method: 'GET',\n        to: config.api + '/blog/' + match.params.id,\n      }).then(function (res) {\n        setState(res.data);\n      });\n    },\n    [match.params.id]\n  );\n\n  const handleChange = useCallback(\n    function (e) {\n      setState({ ...state, [e.target.name]: e.target.value });\n    },\n    [state]\n  );\n\n  const edit = useCallback(\n    function (e) {\n      e.preventDefault();\n      request({\n        method: 'PUT',\n        to: config.api + '/blog/' + match.params.id,\n        data: state,\n      })\n        .then(function (res) {\n          history.push('/blog/' + match.params.id);\n        })\n        .catch(function (err) {\n          alert(err.response.data.message);\n        });\n    },\n    [history, match.params.id, state]\n  );\n\n  useEffect(() => {\n    load();\n  }, [load]);\n\n  return (\n    <>\n      <Row>\n        <Col md={12}>\n          <h3 style={{ marginBottom: 20 }}>Edit Blog</h3>\n          <Form onSubmit={edit}>\n            <Form.Group controlId=\"title\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Title\"\n                name=\"title\"\n                onChange={handleChange}\n                value={state.title}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"slug\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Slug\"\n                name=\"slug\"\n                onChange={handleChange}\n                value={state.slug}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"description\">\n              <Form.Control\n                as=\"textarea\"\n                placeholder=\"Description\"\n                name=\"description\"\n                onChange={handleChange}\n                value={state.description}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"image\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Image\"\n                name=\"image\"\n                onChange={handleChange}\n                value={state.image}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"content\">\n              <ReactMde\n                value={state.content}\n                onChange={setContentValue}\n                selectedTab={selectedTab}\n                onTabChange={setSelectedTab}\n                generateMarkdownPreview={markdown =>\n                  Promise.resolve(<ReactMarkdown source={markdown} />)\n                }\n                childProps={{\n                  writeButton: {\n                    tabIndex: -1,\n                  },\n                }}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"tags\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Tags\"\n                name=\"tags\"\n                onChange={handleChange}\n                value={state.tags}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"submit\">\n              <Button variant=\"primary\" type=\"submit\">\n                Save\n              </Button>\n              &nbsp;\n              <Button onClick={() => history.push('/blog/' + match.params.id)}>\n                Back\n              </Button>\n            </Form.Group>\n          </Form>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default BlogEdit;\n","import axios from 'axios';\nimport * as authHelpers from '../auth';\n\nconst config = {\n  timeout: 0,\n};\n\nfunction defaultHeaders() {\n  const headers = {};\n\n  headers['Content-Type'] = 'application/json';\n\n  const access_token = authHelpers.getAccessToken();\n  if (access_token !== null && !authHelpers.tokenIsExpired())\n    headers.Authorization = `Bearer ${access_token}`;\n\n  return headers;\n}\n\nexport async function request({\n  to,\n  method = 'GET',\n  data = {},\n  params = {},\n  headers = {},\n  custom,\n}) {\n  if (authHelpers.tokenIsAlmostExpired() || !authHelpers.getAccessToken()) {\n    if (!authHelpers.getRefreshToken()) authHelpers.clearAuth();\n    // else\n    // refresh token right before request\n    // await refreshToken().then((data) => {\n    //     setAuth();\n    // }).catch( () => {\n    //     authHelpers.clearAuth();\n    // })\n  }\n\n  return axios({\n    headers: { ...defaultHeaders(), ...headers },\n    url: to,\n    method,\n    data,\n    params,\n    config,\n    ...custom,\n  });\n}\n\nexport function Get({ to, data = {}, params = {}, headers = {} }) {\n  return request({\n    to,\n    method: 'GET',\n    data,\n    params,\n    headers,\n  });\n}\n\nexport function Post({ to, data = {}, params = {}, headers = {} }) {\n  return request({\n    to,\n    method: 'POST',\n    data,\n    params,\n    headers,\n  });\n}\n\nexport function Put({ to, data = {}, params = {}, headers = {} }) {\n  return request({\n    to,\n    method: 'PUT',\n    data,\n    params,\n    headers,\n  });\n}\n\nexport function Patch({ to, data = {}, params = {}, headers = {} }) {\n  return request({\n    to,\n    method: 'PATCH',\n    data,\n    params,\n    headers,\n  });\n}\n\nexport function Options({ to, data = {}, params = {}, headers = {} }) {\n  return request({\n    to,\n    method: 'OPTIONS',\n    data,\n    params,\n    headers,\n  });\n}\n\nexport function Head({ to, data = {}, params = {}, headers = {} }) {\n  return request({\n    to,\n    method: 'HEAD',\n    data,\n    params,\n    headers,\n  });\n}\n\nexport function Delete({ to, data = {}, params = {}, headers = {} }) {\n  return request({\n    to,\n    method: 'DELETE',\n    data,\n    params,\n    headers,\n  });\n}\n"],"sourceRoot":""}